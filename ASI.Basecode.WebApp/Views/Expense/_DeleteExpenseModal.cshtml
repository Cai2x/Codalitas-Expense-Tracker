@model ASI.Basecode.Services.ServiceModels.ExpenseViewModel

<div class="modal fade" id="deleteExpenseModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content delete-modal-content">
            <div class="modal-body delete-modal-body text-center">
                <div class="mb-3">
                    <span class="display-1 text-danger">&times;</span>
                </div>
                <h5 class="modal-title mb-3">Are you sure?</h5>
                <p>Do you really want to delete these records? This process cannot be undone.</p>
                <div class="d-flex justify-content-center mb-3">
                    <button type="button" class="btn btn-secondary deleteModal-Button mr-2" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger deleteModal-Button" onclick="confirmDelete()">Delete</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript to Load Expense Data and Populate Modal -->
<script>
    let deleteExpenseModal; 
    let currentExpenseId;    

    document.addEventListener('DOMContentLoaded', function () {
        const modalElement = document.getElementById('deleteExpenseModal');
        if (modalElement) {
            deleteExpenseModal = new bootstrap.Modal(modalElement);  // Initialize once
        } else {
            console.error("Delete modal not found in DOM!");
        }
    });

    // Function to open the delete modal and set the ExpenseId
    function openDeleteModal(expenseId) {
        currentExpenseId = expenseId;
        // Open the modal programmatically
        if (deleteExpenseModal) {
            deleteExpenseModal.show();
        } else {
            console.error("Modal instance not initialized.");
        }
    }

    // Function to confirm deletion
    function confirmDelete() {
        // Ensure the currentExpenseId is set
        if (!currentExpenseId) {
            console.error('No Expense ID available for deletion.');
            return;
        }

        // Perform the deletion (example with a DELETE request, change endpoint as needed)
        fetch(`/Expense/PostDelete/${currentExpenseId}?currentPage=${currentPage}`, {
            method: 'POST',
        })
            .then(response => response.json()) // Parse the JSON response
            .then(data => {
                if (data.success) {
                    toastr.success('Expense Deleted successfully!');
                    loadData(currentPage, currentSort,currentCategory);
                    deleteExpenseModal.hide();  

                    document.body.classList.remove('modal-open');
                    document.querySelector('.modal-backdrop').remove();
                } else {
                    alert('Failed to delete expense: ' + data.message);
                }
                deleteExpenseModal.hide(); // Close the modal after response
            })
            .catch(error => {
                console.error('Error deleting expense:', error);
                alert('Error deleting expense. Please try again.');
            });
    }
</script>