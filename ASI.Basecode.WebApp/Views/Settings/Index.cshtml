@model ASI.Basecode.Services.ServiceModels.UserViewModel

@{
    ViewData["Title"] = "Settings and Preferences";
}
@section styles {
    
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Newsreader:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/css/settings.css">
    <link rel="stylesheet" href="~/css/changepass.css" />
}

 <div class="page-container">
    <h1>Settings and Preferences</h1>
    <hr class="settings-divider">
    <div class="profile-container">
        <div class="profile-image">
            <!-- Placeholder for user image -->
            <img src="~/images/placeholder.png" alt="Profile Picture" class="profile-picture">
        </div>
        <!--
		<div class="profile-details">
					<h2>@Model.FirstName @Model.LastName</h2>
					<span>@Model.Username</span>
				</div>
        -->
        <div class="profile-details ms-5">
            <h3 class="mb-1">@Model.FirstName @Model.LastName</h3>
        </div>
        <div class="toggle-switch ">
            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
                <label class="form-check-label" for="flexSwitchCheckDefault">
                    <i class="fas fa-moon"></i> Mode
                </label>
            </div>
        </div>

    </div>

    <div class="form-container">
      @*   <div class="row mb-3">
            <div class="col-md-6">
                <label for="FirstName" class="form-label">First Name</label>
                <input asp-for="FirstName" class="form-control input-field" readonly />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="col-md-6">
                <label for="LastName" class="form-label">Last Name</label>
                <input asp-for="LastName" class="form-control input-field" readonly />
                <span asp-validation-for="LastName" class="text-danger"></span>  
            </div>
        </div> *@
        <div class="row mb-3">
            <div class="col-md-12">
                <label for="Email" class="form-label">Email</label>
                <input asp-for="Email" class="form-control input-field" readonly />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
        </div>
        <div class="row mb-4">
            <div class="col-md-12">
                <label for="Username" class="form-label">UserName</label>
                <input asp-for="Username" class="form-control input-field" readonly />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
        </div>
        <div class="button-container">
            <button type="submit" class="btn btn-save" data-bs-toggle="modal" data-bs-target="#editProfileModal">Edit Profile</button>
            <button type="button" class="btn btn-change-password" data-bs-toggle="modal" data-bs-target="#changePasswordModal">
                Change Password
                </button>
        </div>
    </div>
</div>
 
<script>
    // Check if the switch state is stored in localStorage
    const switchState = localStorage.getItem('switchState');
    const switchElement = document.getElementById('flexSwitchCheckDefault');

    // If a state is stored, apply it to the switch
    if (switchState === 'on') {
        switchElement.checked = true;
    } else {
        switchElement.checked = false;
    }

    // Add an event listener to the switch
    switchElement.addEventListener('change', function () {
        // Save the current state of the switch to localStorage
        if (this.checked) {
            localStorage.setItem('switchState', 'on');
        } else {
            localStorage.setItem('switchState', 'off');
        }
    });
</script>

<partial name="ChangePassword" model="new ASI.Basecode.WebApp.Models.ChangePasswordModel()" />
<partial name="_EditProfile" model="new ASI.Basecode.Services.ServiceModels.UserViewModel()" />



@section scripts {
    <script>
        // Check for error message and display Toastr notification
        var errorMessage = '@TempData["ErrorMessage"]';
        if (errorMessage) {
            toastr.error(errorMessage);
        }

        // Check for success message and display Toastr notification
        var successMessage = '@TempData["SuccessMessage"]';
        if (successMessage) {
            toastr.success(successMessage);
        }
    </script>

}
